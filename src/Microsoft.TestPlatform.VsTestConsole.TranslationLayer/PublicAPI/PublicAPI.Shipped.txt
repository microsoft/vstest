#nullable enable
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.ConsoleParameters() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.ConsoleParameters(Microsoft.VisualStudio.TestPlatform.Utilities.Helpers.Interfaces.IFileHelper! fileHelper) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.EnvironmentVariables.get -> System.Collections.Generic.Dictionary<string!, string?>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.EnvironmentVariables.set -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.InheritEnvironmentVariables.get -> bool
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.InheritEnvironmentVariables.set -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.LogFilePath.get -> string?
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.LogFilePath.set -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.TraceLevel.get -> System.Diagnostics.TraceLevel
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters.TraceLevel.set -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.DiscoveryEventsHandleConverter
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.DiscoveryEventsHandleConverter.DiscoveryEventsHandleConverter(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! testDiscoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.DiscoveryEventsHandleConverter.HandleDiscoveredTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>? discoveredTestCases) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.DiscoveryEventsHandleConverter.HandleDiscoveryComplete(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.DiscoveryCompleteEventArgs! discoveryCompleteEventArgs, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>? lastChunk) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.DiscoveryEventsHandleConverter.HandleLogMessage(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.TestMessageLevel level, string? message) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.DiscoveryEventsHandleConverter.HandleRawMessage(string! rawMessage) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.AbortTestRun() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.CancelDiscovery() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.CancelTestRun() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.EndSession() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.InitializeExtensions(System.Collections.Generic.IEnumerable<string!>! pathToAdditionalExtensions) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.StartSession() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! testHostLauncher) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.AbortTestRun() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.CancelDiscovery() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.CancelTestRun() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.EndSession() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.InitializeExtensionsAsync(System.Collections.Generic.IEnumerable<string!>! pathToAdditionalExtensions) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.ProcessTestRunAttachmentsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.AttachmentSet!>! attachments, string? processingSettings, bool isLastBatch, bool collectMetrics, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunAttachmentsProcessingEventsHandler! eventsHandler, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.ProcessTestRunAttachmentsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.AttachmentSet!>! attachments, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.InvokedDataCollector!>? invokedDataCollectors, string? processingSettings, bool isLastBatch, bool collectMetrics, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunAttachmentsProcessingEventsHandler! eventsHandler, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.StartSessionAsync() -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! testHostLauncher) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapperAsync.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.AbortTestRun() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.CancelDiscovery() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.CancelTestRun() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string! discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string! discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.Dispose() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.StopTestSession() -> bool
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.StopTestSessionAsync() -> System.Threading.Tasks.Task<bool>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.TestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler, Microsoft.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.IVsTestConsoleWrapper! consoleWrapper) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.TestSessionInfo.get -> Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo?
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.~TestSession() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TransationLayerException
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TransationLayerException.TransationLayerException(string? message) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TransationLayerException.TransationLayerException(string? message, System.Exception? innerException) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.AbortTestRun() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.CancelDiscovery() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.CancelTestRun() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.EndSession() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.InitializeExtensions(System.Collections.Generic.IEnumerable<string!>! pathToAdditionalExtensions) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.InitializeExtensionsAsync(System.Collections.Generic.IEnumerable<string!>! pathToAdditionalExtensions) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.ProcessTestRunAttachmentsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.AttachmentSet!>! attachments, string? processingSettings, bool isLastBatch, bool collectMetrics, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunAttachmentsProcessingEventsHandler! testSessionEventsHandler, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.ProcessTestRunAttachmentsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.AttachmentSet!>! attachments, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.InvokedDataCollector!>? invokedDataCollectors, string? processingSettings, bool isLastBatch, bool collectMetrics, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunAttachmentsProcessingEventsHandler! testSessionEventsHandler, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StartSession() -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StartSessionAsync() -> System.Threading.Tasks.Task!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher? testHostLauncher) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher? testHostLauncher) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.VsTestConsoleWrapper(string! vstestConsolePath) -> void
Microsoft.TestPlatform.VsTestConsole.TranslationLayer.VsTestConsoleWrapper.VsTestConsoleWrapper(string! vstestConsolePath, Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters! consoleParameters) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.AbortTestRun() -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.CancelDiscovery() -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.CancelTestRun() -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string! discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string! discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.StopTestSession() -> bool
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession.TestSessionInfo.get -> Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo?
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.AbortTestRun() -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.CancelDiscovery() -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.CancelTestRun() -> void
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string! runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.StopTestSessionAsync() -> System.Threading.Tasks.Task<bool>!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSessionAsync.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions! options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources
virtual Microsoft.TestPlatform.VsTestConsole.TranslationLayer.TestSession.Dispose(bool disposing) -> void
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.AbortedStartTestSession.get -> string
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.AbortedStopTestSession.get -> string
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.AbortedTestRunAttachmentsProcessing.get -> string
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.AbortedTestsDiscovery.get -> string
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.AbortedTestsRun.get -> string
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.Culture.get -> System.Globalization.CultureInfo
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.Culture.set -> void
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.FailedToReceiveMessage.get -> string
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.InvalidFilePath.get -> string
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.ResourceManager.get -> System.Resources.ResourceManager
~static Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Resources.Resources.VsTestProcessExitedAbnormally.get -> string
