<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TestPlatformRoot Condition="$(TestPlatformRoot) == ''">..\..\</TestPlatformRoot>
    <!-- MSB3270 Suppress warnings about testhost being x64 (AMD64)/x86 when imported into AnyCPU (MSIL) projects. -->
    <!-- MSB3276 Suppress warnings about conflicts between different versions of the same dependent assembly -->
    <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB3270;MSB3276</MSBuildWarningsAsMessages>
  </PropertyGroup>
  <Import Project="$(TestPlatformRoot)src\Microsoft.TestPlatform.Execution.Shared\Microsoft.TestPlatform.Execution.Shared.projitems" Label="Shared" />
  <Import Project="$(TestPlatformRoot)scripts/build/TestPlatform.Settings.targets" />
  <PropertyGroup>
    <AssemblyName>testhost.arm64</AssemblyName>
    <TargetFrameworks>net7.0;$(NetCoreAppMinimum);$(NetFrameworkMinimum);net47;net471;net472;net48</TargetFrameworks>
    <TargetFrameworks Condition=" '$(DotNetBuildFromSource)' == 'true' ">net7.0;</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <IsTestProject>false</IsTestProject>
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' != '$(NetCoreAppMinimum)' AND '$(TargetFramework)' != 'net6.0' AND '$(TargetFramework)' != 'net7.0' ">
    <RuntimeIdentifier Condition="'$(DotNetBuildFromSource)' != 'true'">win10-arm64</RuntimeIdentifier>
    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>
    <TargetName Condition="'$(TargetFramework)' != '$(NetFrameworkMinimum)'">$(AssemblyName.Replace('.arm64', '')).$(TargetFramework).arm64</TargetName>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\testhost.x86\DebugAssertException.cs" Link="DebugAssertException.cs" />
    <Compile Include="..\testhost.x86\Program.cs;..\testhost.x86\DefaultEngineInvoker.cs;..\testhost.x86\IEngineInvoker.cs;..\testhost.x86\AppDomainEngineInvoker.cs;..\testhost.x86\Friends.cs;..\testhost.x86\UnitTestClient.cs" />
    <Compile Include="..\testhost.x86\TestHostTraceListener.cs" Link="TestHostTraceListener.cs" />
    <None Include="app.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Microsoft.TestPlatform.CommunicationUtilities\Microsoft.TestPlatform.CommunicationUtilities.csproj" />
    <ProjectReference Include="..\Microsoft.TestPlatform.ObjectModel\Microsoft.TestPlatform.ObjectModel.csproj" />
    <ProjectReference Include="..\Microsoft.TestPlatform.CrossPlatEngine\Microsoft.TestPlatform.CrossPlatEngine.csproj" />
    <ProjectReference Include="..\Microsoft.TestPlatform.CoreUtilities\Microsoft.TestPlatform.CoreUtilities.csproj">
      <FromP2P>true</FromP2P>
    </ProjectReference>
    <ProjectReference Include="..\Microsoft.TestPlatform.Common\Microsoft.TestPlatform.Common.csproj">
      <FromP2P>true</FromP2P>
    </ProjectReference>

    <!-- CVE-2019-0657, CVE-2019-0980 and CVE-2019-0981 mitigation -->
    <PackageReference Include="System.Private.Uri" Version="$(SystemUriVersion)" />
    <PackageReference Include="Microsoft.NETCore.Targets" Version="1.1.4" Condition=" $(TargetFramework.StartsWith('net4')) " />
    <!-- CVE-2019-0657, CVE-2019-0980 and CVE-2019-0981 mitigation -->
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('net4')) AND '$(OS)' != 'Windows_NT' ">
    <Reference Include="System" />
    <Reference Include="System.Runtime" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>
  <ItemGroup>
    <!-- API that is common to all frameworks that we build for. -->
    <AdditionalFiles Include="..\testhost.x86\PublicAPI\PublicAPI.Shipped.txt" Link="PublicAPI\PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="..\testhost.x86\PublicAPI\PublicAPI.Unshipped.txt" Link="PublicAPI\PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <Import Project="$(TestPlatformRoot)scripts\build\TestPlatform.targets" />
</Project>
