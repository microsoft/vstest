<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--
      This library is consumed by test frameworks and will run in testhosts, ship as that, and netstandard so everyone can use it.

      Adding newer tfms for .NET here is okay if we need to use features that are specific to them.
      17.11.0 started supporting net9 and net8 explicitly so we can condition serialization attributes.
    -->
    <TargetFrameworks>$(TestHostMinimumTargetFrameworks);$(ExtensionTargetFrameworks);net9.0</TargetFrameworks>
    <AssemblyName>Microsoft.TestPlatform.AdapterUtilities</AssemblyName>
    <RootNamespace>Microsoft.TestPlatform.AdapterUtilities</RootNamespace>
  </PropertyGroup>

  <PropertyGroup>
    <IsPackable Condition="'$(DotNetBuildSourceOnly)' != 'true'">true</IsPackable>
    <NuspecFile>Microsoft.TestPlatform.AdapterUtilities.nuspec</NuspecFile>
    <NuspecBasePath>$(OutputPath)</NuspecBasePath>
    <PackageId>Microsoft.TestPlatform.AdapterUtilities</PackageId>
    <PackageTags>vstest visual-studio unittest testplatform mstest microsoft test testing</PackageTags>
    <PackageDescription>
      Includes helpers for the Test Platform's modern functionality such as standardized fully qualified names and hierarchical test case names.
    </PackageDescription>
  </PropertyGroup>

  <PropertyGroup Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', '$(NetFrameworkMinimum)'))">
    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>
  </PropertyGroup>

  <ItemGroup Condition="'$(DotNetBuildSourceOnly)' != 'true'">
    <!-- CVE-2019-0657 mitigation -->
    <PackageReference Include="System.Private.Uri" Version="$(SystemUriVersion)" />
    <!-- / CVE-2019-0657 mitigation -->
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <EmbeddedResource Update="Resources\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <!-- API that is common to all frameworks that we build for. -->
    <AdditionalFiles Include="PublicAPI/PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="PublicAPI/PublicAPI.Unshipped.txt" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\shared\NullableAttributes.cs" Link="NullableAttributes.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Update="NullableHelpers.tt">
      <LastGenOutput>NullableHelpers.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="NullableHelpers.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>NullableHelpers.tt</DependentUpon>
    </Compile>
  </ItemGroup>

</Project>
