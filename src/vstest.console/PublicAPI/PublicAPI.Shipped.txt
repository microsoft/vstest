#nullable enable
Microsoft.VisualStudio.TestPlatform.CommandLine.CommandLineException
Microsoft.VisualStudio.TestPlatform.CommandLine.CommandLineException.CommandLineException() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.CommandLineException.CommandLineException(string? message) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.CommandLineException.CommandLineException(string? message, System.Exception? innerException) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Internal.Product
Microsoft.VisualStudio.TestPlatform.CommandLine.Internal.Product.Product() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Processors.ArgumentProcessorResult
Microsoft.VisualStudio.TestPlatform.CommandLine.Processors.ArgumentProcessorResult.Abort = 2 -> Microsoft.VisualStudio.TestPlatform.CommandLine.Processors.ArgumentProcessorResult
Microsoft.VisualStudio.TestPlatform.CommandLine.Processors.ArgumentProcessorResult.Fail = 1 -> Microsoft.VisualStudio.TestPlatform.CommandLine.Processors.ArgumentProcessorResult
Microsoft.VisualStudio.TestPlatform.CommandLine.Processors.ArgumentProcessorResult.Success = 0 -> Microsoft.VisualStudio.TestPlatform.CommandLine.Processors.ArgumentProcessorResult
Microsoft.VisualStudio.TestPlatform.CommandLine.Program
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.IMetricsPublisher
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.IMetricsPublisher.PublishMetrics(string! eventName, System.Collections.Generic.IDictionary<string!, object?>! metrics) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.MetricsPublisherFactory
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.MetricsPublisherFactory.MetricsPublisherFactory() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.NoOpMetricsPublisher
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.NoOpMetricsPublisher.Dispose() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.NoOpMetricsPublisher.NoOpMetricsPublisher() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.NoOpMetricsPublisher.PublishMetrics(string! eventName, System.Collections.Generic.IDictionary<string!, object?>! metrics) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.TextFileTelemetryPublisher
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.TextFileTelemetryPublisher.Dispose() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.TextFileTelemetryPublisher.PublishMetrics(string! eventName, System.Collections.Generic.IDictionary<string!, object?>! metrics) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.TextFileTelemetryPublisher.TextFileTelemetryPublisher() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.TestSourceException
Microsoft.VisualStudio.TestPlatform.CommandLine.TestSourceException.TestSourceException() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.TestSourceException.TestSourceException(string? message) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.TestSourceException.TestSourceException(string? message, System.Exception? innerException) -> void
Microsoft.VisualStudio.TestPlatform.CommandLineUtilities.GenerateFakesUtilities
static Microsoft.VisualStudio.TestPlatform.CommandLine.Program.Main(string![]? args) -> int
static Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.MetricsPublisherFactory.GetMetricsPublisher(bool isTelemetryOptedIn, bool isDesignMode) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.CommandLine.Publisher.IMetricsPublisher!>!
static readonly Microsoft.VisualStudio.TestPlatform.CommandLine.Internal.Product.Version -> string?
vstest.console.Internal.FilePatternParser
vstest.console.Internal.FilePatternParser.FilePatternParser() -> void
vstest.console.Internal.FilePatternParser.GetMatchingFiles(string! filePattern) -> System.Collections.Generic.List<string!>!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.AbortTestRun() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.CancelDiscovery() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.CancelTestRun() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.DiscoverTests(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.DiscoverTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? discoverySettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestDiscoveryEventsHandler2! discoveryEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.EndSession() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.InitializeExtensions(System.Collections.Generic.IEnumerable<string!>! pathToAdditionalExtensions) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.InitializeExtensionsAsync(System.Collections.Generic.IEnumerable<string!>! pathToAdditionalExtensions) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.InProcessVsTestConsoleWrapper(Microsoft.TestPlatform.VsTestConsole.TranslationLayer.ConsoleParameters! consoleParameters) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.ProcessTestRunAttachmentsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.AttachmentSet!>! attachments, string? processingSettings, bool isLastBatch, bool collectMetrics, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunAttachmentsProcessingEventsHandler! eventsHandler, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.ProcessTestRunAttachmentsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.AttachmentSet!>! attachments, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.InvokedDataCollector!>? invokedDataCollectors, string? processingSettings, bool isLastBatch, bool collectMetrics, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunAttachmentsProcessingEventsHandler! eventsHandler, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTests(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHost(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase!>! testCases, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.RunTestsWithCustomTestHostAsync(System.Collections.Generic.IEnumerable<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestRunEventsHandler! testRunEventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher! customTestHostLauncher) -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StartSession() -> void
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StartSessionAsync() -> System.Threading.Tasks.Task!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StartTestSession(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher? testHostLauncher) -> Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StartTestSessionAsync(System.Collections.Generic.IList<string!>! sources, string? runSettings, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.Interfaces.ITestHostLauncher? testHostLauncher) -> System.Threading.Tasks.Task<Microsoft.VisualStudio.TestPlatform.VsTestConsole.TranslationLayer.Interfaces.ITestSession?>!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StopTestSession(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> bool
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
Microsoft.VisualStudio.TestPlatform.CommandLine.InProcessVsTestConsoleWrapper.StopTestSessionAsync(Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestSessionInfo? testSessionInfo, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.TestPlatformOptions? options, Microsoft.VisualStudio.TestPlatform.ObjectModel.Client.ITestSessionEventsHandler! eventsHandler) -> System.Threading.Tasks.Task<bool>!
