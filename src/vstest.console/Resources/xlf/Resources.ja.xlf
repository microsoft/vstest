<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" original="../Resources.resx" target-language="ja">
    <body>
      <trans-unit id="FileNotFound">
        <source>'{0}' not found.</source>
        <note></note>
        <target state="translated">'{0}' が見つかりません。</target>
      </trans-unit>
      <trans-unit id="AvailableDiscoverersHeaderMessage">
        <source>The following Test Discovery Add-Ins are available:</source>
        <note></note>
        <target state="translated">次のテスト探索アドインを使用できます:</target>
      </trans-unit>
      <trans-unit id="AvailableExecutorsHeaderMessage">
        <source>The following Test Execution Add-Ins are available:</source>
        <note></note>
        <target state="translated">次のテスト実行アドインを使用できます:</target>
      </trans-unit>
      <trans-unit id="AvailableExtensionFormat">
        <source>    {0}</source>
        <note>{Locked}</note>
        <target state="new">    {0}</target>
      </trans-unit>
      <trans-unit id="AvailableExtensionsMetadataFormat">
        <source>        {0}: {1}</source>
        <note></note>
        <target state="translated">        {0}: {1}</target>
      </trans-unit>
      <trans-unit id="AvailableLoggersHeaderMessage">
        <source>The following Test Logger Add-Ins are available:</source>
        <note></note>
        <target state="translated">次のテスト ロガー アドインを使用できます:</target>
      </trans-unit>
      <trans-unit id="AvailableTestsFormat">
        <source>    {0}</source>
        <note>{Locked}</note>
        <target state="new">    {0}</target>
      </trans-unit>
      <trans-unit id="CommandLineError">
        <source>Error: {0}</source>
        <note></note>
        <target state="translated">エラー: {0}</target>
      </trans-unit>
      <trans-unit id="CommaSeparatedFormat">
        <source>, {0}</source>
        <note>Format used to comma separate a list of values.</note>
        <target state="translated">, {0}</target>
      </trans-unit>
      <trans-unit id="DuplicateArgumentError">
        <source>The parameter "{0}" should be provided only once.</source>
        <note></note>
        <target state="translated">パラメーター "{0}" は一度しか指定できません。</target>
      </trans-unit>
      <trans-unit id="ExceptionFromExtension">
        <source>Exception occurred when instantiating extension '{0}': {1}</source>
        <note></note>
        <target state="translated">拡張をインスタンス化しているときに例外が発生しました: '{0}': {1}</target>
      </trans-unit>
      <trans-unit id="ListTestsHeaderMessage">
        <source>The following Tests are available:</source>
        <note></note>
        <target state="translated">次のテストを使用できます:</target>
      </trans-unit>
      <trans-unit id="NoArgumentProcessorFound">
        <source>Unrecognized parameter "{0}".</source>
        <note></note>
        <target state="translated">パラメーター "{0}" は認識されていません。</target>
      </trans-unit>
      <trans-unit id="TestSourceFileNotFound">
        <source>The test source file "{0}" provided was not found.</source>
        <note></note>
        <target state="translated">指定されたテスト ソース ファイル "{0}" が見つかりませんでした。</target>
      </trans-unit>
      <trans-unit id="LoggerUriInvalid">
        <source>The Test Logger URI '{0}' is not valid.  The Test Logger will be ignored.</source>
        <note></note>
        <target state="translated">テスト ロガーの URI '{0}' は無効です。テスト ロガーは無視されます。</target>
      </trans-unit>
      <trans-unit id="CommandLineInformational">
        <source>Information: {0}</source>
        <note></note>
        <target state="translated">情報: {0}</target>
      </trans-unit>
      <trans-unit id="CommandLineWarning">
        <source>Warning: {0}</source>
        <note></note>
        <target state="translated">警告: {0}</target>
      </trans-unit>
      <trans-unit id="HelpArgumentHelp">
        <source>-?|--Help|/?|/Help
      Display this usage message.</source>
        <note></note>
        <target state="translated">-?|--Help|/?|/Help
      この使用方法に関するメッセージを表示します。</target>
      </trans-unit>
      <trans-unit id="CopyrightCommandLineTitle">
        <source>Copyright (c) Microsoft Corporation.  All rights reserved.</source>
        <note></note>
        <target state="translated">Copyright (c) Microsoft Corporation.  All rights reserved.</target>
      </trans-unit>
      <trans-unit id="MicrosoftCommandLineTitle">
        <source>Microsoft (R) Test Execution Command Line Tool Version {0}</source>
        <note></note>
        <target state="translated">Microsoft (R) Test Execution Command Line Tool Version {0}</target>
      </trans-unit>
      <trans-unit id="EnableLoggersArgumentHelp">
        <source>--logger|/logger:&lt;Logger Uri/FriendlyName&gt;
      Specify a logger for test results. For example, to log results into a 
      Visual Studio Test Results File (TRX) use /logger:trx[;LogFileName=&lt;Defaults to unique file name&gt;]
      Creates file in TestResults directory with given LogFileName.

      Change the verbosity level in log messages for console logger as shown below
      Example: /logger:console;verbosity=&lt;Defaults to "normal"&gt;
      Allowed values for verbosity: quiet, minimal, normal and detailed.

      Change the diagnostic level prefix for console logger as shown below
      Example: /logger:console;prefix=&lt;Defaults to "false"&gt;
      More info on Console Logger here : https://aka.ms/console-logger</source>
        <note></note>
        <target state="translated">--logger|/logger:&lt;Logger Uri/FriendlyName&gt;
      テスト結果のロガーを指定します。たとえば、結果のログを
      Visual Studio のテスト結果ファイル (TRX) に記録するには、/logger:trx[;LogFileName=&lt;Defaults to unique file name&gt;] を使用します
      TestResults ディレクトリに、指定された LogFileName でファイルを作成します。

      コンソール ロガーのログ メッセージの詳細レベルを、次のように変更します
      例: /logger:console;verbosity=&lt;Defaults to "normal"&gt;
      詳細レベルに使用できる値: quiet、minimal、normal、detailed。

      コンソール ロガーの診断レベルのプレフィックスを次のように変更します
      例: /logger:console;prefix=&lt;Defaults to "false"&gt;
      コンソール ロガーの詳細についてはこちらをご覧ください: https://aka.ms/console-logger</target>
      </trans-unit>
      <trans-unit id="HelpDescriptionText">
        <source>Description: Runs tests from the specified files.</source>
        <note></note>
        <target state="translated">説明: 指定されたファイルからテストを実行します。</target>
      </trans-unit>
      <trans-unit id="HelpOptionsText">
        <source>Options:</source>
        <note>Section Header for subsequent command help listing</note>
        <target state="translated">オプション:</target>
      </trans-unit>
      <trans-unit id="HelpUsageText">
        <source>Usage: vstest.console.exe [Arguments] [Options] [[--] &lt;RunSettings arguments&gt;...]]</source>
        <note></note>
        <target state="translated">使用法: vstest.console.exe [引数] [オプション] [[--] &lt;RunSettings arguments&gt;...]]</target>
      </trans-unit>
      <trans-unit id="MissingTestSourceFile">
        <source>No test source files were specified.</source>
        <note></note>
        <target state="translated">テスト ソース ファイルが指定されていません。</target>
      </trans-unit>
      <trans-unit id="NoArgumentsProvided">
        <source>No arguments were specified.</source>
        <note></note>
        <target state="translated">引数が指定されていません。</target>
      </trans-unit>
      <trans-unit id="RunTestsArgumentHelp">
        <source>[TestFileNames]
      Run tests from the specified files or wild card pattern. Separate multiple test file names or pattern
      by spaces. Set console logger verbosity to detailed to view matched test files.
      Examples: mytestproject.dll
                mytestproject.dll myothertestproject.exe
                testproject*.dll my*project.dll</source>
        <note></note>
        <target state="translated">[TestFileNames]
      指定されたファイルまたはワイルド カード パターンからテストを実行します。複数のテスト ファイル名または
      パターンをスペースで区切ります。一致したテスト ファイルを表示するには、コンソール ロガーの詳細度を detailed に設定します。
      例: mytestproject.dll
                mytestproject.dll myothertestproject.exe
                testproject*.dll my*project.dll</target>
      </trans-unit>
      <trans-unit id="AvailableSettingsProvidersHeaderMessage">
        <source>The following Settings Providers Add-Ins are available:</source>
        <note></note>
        <target state="translated">次の設定プロバイダー アドインを使用できます:</target>
      </trans-unit>
      <trans-unit id="RunSettingsArgumentHelp">
        <source>--Settings|/Settings:&lt;Settings File&gt;
      Settings to use when running tests.</source>
        <note></note>
        <target state="translated">--Settings|/Settings:&lt;Settings File&gt;
      テストを実行する際に使用する設定です。</target>
      </trans-unit>
      <trans-unit id="RunSettingsRequired">
        <source>The /Settings parameter requires a settings file to be provided.</source>
        <note></note>
        <target state="translated">/Settings パラメーターには、設定ファイルを指定する必要があります。</target>
      </trans-unit>
      <trans-unit id="RunSettingsFileNotFound">
        <source>The Settings file '{0}' could not be found.</source>
        <note></note>
        <target state="translated">設定ファイル '{0}' が見つかりませんでした。</target>
      </trans-unit>
      <trans-unit id="TestRunFailed">
        <source>Test Run Failed.</source>
        <note></note>
        <target state="translated">テストの実行に失敗しました。</target>
      </trans-unit>
      <trans-unit id="TestRunSuccessful">
        <source>Test Run Successful.</source>
        <note></note>
        <target state="translated">テストの実行に成功しました。</target>
      </trans-unit>
      <trans-unit id="InvalidInIsolationCommand">
        <source>Argument {0} is not expected in the 'InIsolation' command. Specify the command without the argument (Example: vstest.console.exe myTests.dll /InIsolation) and try again.</source>
        <note></note>
        <target state="translated">'InIsolation' コマンドでは、引数 {0} は適切ではありません。引数なしでコマンドを指定し (例: vstest.console.exe myTests.dll /InIsolation)、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="UseVsixExtensionsValueRequired">
        <source>The /UseVsixExtensions parameter requires a value. If 'true', the installed VSIX extensions (if any) will be used in the test run. If false, they will be ignored.   Example:  /UseVsixExtensions:true</source>
        <note></note>
        <target state="translated">/UseVsixExtensions パラメーターに値を指定する必要があります。'true' を指定すると、インストール済みの VSIX 拡張機能 (ある場合) がテストの実行で使用されます。false を指定すると、これらは無視されます。例: /UseVsixExtensions:true</target>
      </trans-unit>
      <trans-unit id="InvalidUseVsixExtensionsCommand">
        <source>Argument {0} is not expected in the 'UseVsixExtensions' command. Specify the command indicating whether the vsix extensions should be used or skipped (Example: vstest.console.exe myTests.dll /UseVsixExtensions:true) and try again.</source>
        <note></note>
        <target state="translated">'UseVsixExtensions' コマンドでは、引数 {0} は適切ではありません。vsix 拡張機能を使用するのかスキップするのかを示すコマンドを指定し (例: vstest.console.exe myTests.dll /UseVsixExtensions:true)、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="InIsolationHelp">
        <source>--InIsolation|/InIsolation
      Runs the tests in an isolated process. This makes vstest.console.exe 
      process less likely to be stopped on an error in the tests, but tests 
      may run slower.</source>
        <note></note>
        <target state="translated">--InIsolation|/InIsolation
      分離プロセスでテストを実行します。これにより、vstest.console.exe 
      プロセスがテスト時にエラーで停止する可能性は低くなりますが、
      テストの速度が遅くなる場合があります。</target>
      </trans-unit>
      <trans-unit id="UseVsixExtensionsHelp">
        <source>/UseVsixExtensions
      This makes vstest.console.exe process use or skip the VSIX extensions 
      installed(if any) in the test run. 
      Example  /UseVsixExtensions:true</source>
        <note></note>
        <target state="translated">/UseVsixExtensions
      これにより、テストの実行で vstest.console.exe プロセスによってインストール済みの
      VSIX 拡張機能 (ある場合) が使用またはスキップされます。 
      例 /UseVsixExtensions:true</target>
      </trans-unit>
      <trans-unit id="BatchSizeRequired">
        <source>The /BatchSize argument requires the size of the batch.  Example:  /BatchSize:10</source>
        <note></note>
        <target state="translated">/BatchSize 引数には、バッチのサイズが必要です。例: /BatchSize:10</target>
      </trans-unit>
      <trans-unit id="InvalidBatchSize">
        <source>Invalid batch size {0}. The batch size should be greater than zero. Example:  /BatchSize:10</source>
        <note></note>
        <target state="translated">バッチ サイズ {0} は無効です。バッチ サイズには、0 より大きい値を指定してください。例: /BatchSize:10</target>
      </trans-unit>
      <trans-unit id="Examples">
        <source>  To run tests:
    &gt;vstest.console.exe tests.dll 
  To run tests with additional settings such as  data collectors:
    &gt;vstest.console.exe  tests.dll /Settings:Local.RunSettings</source>
        <note></note>
        <target state="translated">  テストを実行する:
    &gt;vstest.console.exe tests.dll 
  テストをデータ コレクターなどの追加設定を指定して実行する:
    &gt;vstest.console.exe  tests.dll /Settings:Local.RunSettings</target>
      </trans-unit>
      <trans-unit id="ListDiscoverersHelp">
        <source>/ListDiscoverers
      Lists installed test discoverers.</source>
        <note></note>
        <target state="translated">/ListDiscoverers
      インストール済みのテスト探索プログラムを一覧表示します。</target>
      </trans-unit>
      <trans-unit id="ListExecutorsHelp">
        <source>/ListExecutors
      Lists installed test executors.</source>
        <note></note>
        <target state="translated">/ListExecutors
      インストール済みのテスト実行プログラムを一覧表示します。</target>
      </trans-unit>
      <trans-unit id="ListLoggersHelp">
        <source>/ListLoggers
      Lists installed test loggers.</source>
        <note></note>
        <target state="translated">/ListLoggers
      インストール済みのテスト ロガーを一覧表示します。</target>
      </trans-unit>
      <trans-unit id="ListSettingsProvidersHelp">
        <source>/ListSettingsProviders
      Lists installed test settings providers.</source>
        <note></note>
        <target state="translated">/ListSettingsProviders
      インストール済みのテスト設定プロバイダーを一覧表示します。</target>
      </trans-unit>
      <trans-unit id="ListTestsHelp">
        <source>-lt|--ListTests|/lt|/ListTests:&lt;File Name&gt;
      Lists all discovered tests from the given test container.</source>
        <note></note>
        <target state="translated">-lt|--ListTests|/lt|/ListTests:&lt;ファイル名&gt;
      指定されたテスト コンテナーから、すべての探索されたテストを一覧表示します。</target>
      </trans-unit>
      <trans-unit id="TimeElapsed">
        <source>Time elapsed :</source>
        <note></note>
        <target state="translated">経過時間:</target>
      </trans-unit>
      <trans-unit id="SpecificTestsRequired">
        <source>The /Tests argument requires one or more specific test names or their substrings.
       Examples: /Tests:TestsMethod1, /Tests:TestMethod1,method2 </source>
        <note></note>
        <target state="translated">/Tests 引数には、1 つ以上の特定のテスト名またはその部分文字列が必要です。
       例: /Tests:TestsMethod1、/Tests:TestMethod1,method2 </target>
      </trans-unit>
      <trans-unit id="NoTestsAvailableAfterFiltering">
        <source>A total of {0} tests were discovered but no test matches the specified selection criteria({1}). Use right value(s) and try again.</source>
        <note></note>
        <target state="translated">合計 {0} 個のテストが検出されましたが、指定された選択条件 ({1}) に一致するテストはありません。適切な値を使用して、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="SearchStringDelimiter">
        <source>,</source>
        <note></note>
        <target state="translated">,</target>
      </trans-unit>
      <trans-unit id="RunSpecificTestsHelp">
        <source>--Tests|/Tests:&lt;Test Names&gt;
      Run tests with names that match the provided values. To provide multiple
      values, separate them by commas.
      Examples: /Tests:TestMethod1
                /Tests:TestMethod1,testMethod2</source>
        <note>Please verify if the console output looks good after modifiaction. </note>
        <target state="translated">--Tests|/Tests:&lt;Test Names&gt;
      指定された値に一致する名前のテストを実行します。複数の値を
      指定する場合、コンマで区切ります。
      例: /Tests:TestMethod1
                /Tests:TestMethod1,testMethod2</target>
      </trans-unit>
      <trans-unit id="SwitchToNoIsolation">
        <source>Using Isolation mode to run the tests as diagnostic data adapters were enabled in the runsettings. Use the /inIsolation parameter to suppress this warning.</source>
        <note></note>
        <target state="translated">診断データ アダプターが実行設定で有効になっていたので、テストの実行に分離モードを使用しています。この警告が表示されないようにするには、/inIsolation パラメーターを使用します。</target>
      </trans-unit>
      <trans-unit id="SwitchToIsolationInAppContainerMode">
        <source>Using Isolation mode to run unit tests for Windows Store apps. Use the /InIsolation parameter to suppress this warning.</source>
        <note></note>
        <target state="translated">Windows ストア アプリの単体テストを実行するために、分離モードを使用しています。この警告が表示されないようにするには、/InIsolation パラメーターを使用します。</target>
      </trans-unit>
      <trans-unit id="DisablingDataCollectionInAppContainerTestExecution">
        <source>Diagnostic data adapters are not supported when running unit tests for Windows Store apps. Remove diagnostic data adapters settings from settings.</source>
        <note></note>
        <target state="translated">Windows ストア アプリの単体テストの実行時は、診断データ アダプターはサポートされません。設定から診断データ アダプターの設定を削除してください。</target>
      </trans-unit>
      <trans-unit id="LoggerFriendlyNameFormat">
        <source>        FriendlyName: {0}</source>
        <note></note>
        <target state="translated">        表示名: {0}</target>
      </trans-unit>
      <trans-unit id="ExtensionUriFormat">
        <source>        Uri: {0}</source>
        <note></note>
        <target state="translated">        URI: {0}</target>
      </trans-unit>
      <trans-unit id="SettingFormat">
        <source>        SettingName: {0}</source>
        <note></note>
        <target state="translated">        SettingName: {0}</target>
      </trans-unit>
      <trans-unit id="SupportedFileTypesIndicator">
        <source>        Supported File Types:</source>
        <note></note>
        <target state="translated">        サポートされているファイルの種類:</target>
      </trans-unit>
      <trans-unit id="SupportedFileWithoutSeparator">
        <source> {0}</source>
        <note></note>
        <target state="translated"> {0}</target>
      </trans-unit>
      <trans-unit id="SupportedFileWithSeparator">
        <source> {0},</source>
        <note></note>
        <target state="translated"> {0},</target>
      </trans-unit>
      <trans-unit id="UriOfDefaultExecutor">
        <source>        Default Executor Uri: {0}</source>
        <note></note>
        <target state="translated">        既定の実行プログラムの URI: {0}</target>
      </trans-unit>
      <trans-unit id="LoggerUriFormat">
        <source>        Uri: {0}</source>
        <note></note>
        <target state="translated">        URI: {0}</target>
      </trans-unit>
      <trans-unit id="InvalidPlatformType">
        <source>Invalid platform type:{0}. Valid platform types are x86, x64 and Arm.</source>
        <note></note>
        <target state="translated">プラットフォームの種類が無効です: {0}。有効なプラットフォームの種類は、x86、x64、および Arm です。</target>
      </trans-unit>
      <trans-unit id="PlatformTypeRequired">
        <source>The /Platform argument requires the target platform type for the test run to be provided.   Example:  /Platform:x86</source>
        <note></note>
        <target state="translated">/Platform 引数には、テストの実行対象とするプラットフォームの種類を指定する必要があります。例: /Platform:x86</target>
      </trans-unit>
      <trans-unit id="PlatformArgumentHelp">
        <source>--Platform|/Platform:&lt;Platform type&gt;
      Target platform architecture to be used for test execution. 
      Valid values are x86, x64 and ARM.</source>
        <note></note>
        <target state="translated">--Platform|/Platform:&lt;Platform type&gt;
      テストの実行に使用するターゲット プラットフォームのアーキテクチャです。
      有効な値は、x86、x64、ARM です。</target>
      </trans-unit>
      <trans-unit id="SwitchToIsolationInMultiTargetingMode">
        <source>Using Isolation mode to run tests as required by effective Platform:{0} and .Net Framework:{1} settings for test run. Use the /inIsolation parameter to suppress this warning.</source>
        <note></note>
        <target state="translated">テスト実行のための効果的なプラットフォーム: {0} および .Net Framework: {1} の設定で必要とされるため、テストの実行に分離モードを使用しています。この警告が表示されないようにするには、/inIsolation パラメーターを使用します。</target>
      </trans-unit>
      <trans-unit id="FrameworkArgumentHelp">
        <source>--Framework|/Framework:&lt;Framework Version&gt;
      Target .Net Framework version to be used for test execution. 
      Valid values are ".NETFramework,Version=v4.5.1", ".NETCoreApp,Version=v1.0" etc.
      Other supported values are Framework40, Framework45, FrameworkCore10 and FrameworkUap10.</source>
        <note></note>
        <target state="translated">--Framework|/Framework:&lt;Framework Version&gt;
      テストの実行に使用する、.Net Framework のターゲット バージョン。
      有効な値は ".NETFramework,Version=v4.5.1"、".NETCoreApp,Version=v1.0" などです。
      サポートされている他の値は、Framework40、Framework45、FrameworkCore10、FrameworkUap10 です。</target>
      </trans-unit>
      <trans-unit id="FrameworkVersionRequired">
        <source>The /Framework argument requires the target .Net Framework version for the test run.   Example:  /Framework:".NETFramework,Version=v4.5.1"</source>
        <note></note>
        <target state="translated">/Framework 引数には、テストの実行対象とする .Net Framework バージョンが必要です。例: /Framework:".NETFramework,Version=v4.5.1"</target>
      </trans-unit>
      <trans-unit id="InvalidFrameworkVersion">
        <source>Invalid .Net Framework version:{0}. Please give the fullname of the TargetFramework(Example: .NETCoreApp,Version=v2.0). Other supported .Net Framework versions are Framework40, Framework45, FrameworkCore10 and FrameworkUap10.</source>
        <note></note>
        <target state="translated">.Net Framework バージョンが無効です: {0}。TargetFramework の完全な名前を指定してください (例: .NETCoreApp,Version=v2.0)。その他のサポートされる .Net Framework バージョンは Framework40、Framework45、FrameworkCore10、FrameworkUap10 です。</target>
      </trans-unit>
      <trans-unit id="AppContainerTestPrerequisiteFail">
        <source>Could not start test run for unit tests for Windows Store app: {0}.</source>
        <note></note>
        <target state="translated">Windows ストア アプリの単体テストのテスト実行を開始できません: {0}。</target>
      </trans-unit>
      <trans-unit id="TestCaseFilterArgumentHelp">
        <source>--TestCaseFilter|/TestCaseFilter:&lt;Expression&gt;
      Run tests that match the given expression.
      &lt;Expression&gt; is of the format &lt;property&gt;Operator&lt;value&gt;[|&amp;&lt;Expression&gt;]
         where Operator is one of =, != or ~  (Operator ~ has 'contains'
         semantics and is applicable for string properties like DisplayName).
         Parenthesis () can be used to group sub-expressions.
      Examples: /TestCaseFilter:"Priority=1"
                /TestCaseFilter:"(FullyQualifiedName~Nightly
                                  |Name=MyTestMethod)"</source>
        <note></note>
        <target state="translated">--TestCaseFilter|/TestCaseFilter:&lt;Expression&gt;
      指定された式と一致するテストを実行します。
      &lt;Expression&gt; の形式は &lt;property&gt;演算子&lt;value&gt;[|&amp;&lt;Expression&gt;]
         で、演算子は =、!=、~ のいずれかです (演算子 ~ には '含む'
         セマンティクスがあり、DisplayName などの文字列プロパティに適用されます)。
         かっこ () は、サブ式のグループ化に使用できます。
      例: /TestCaseFilter:"Priority=1"
                /TestCaseFilter:"(FullyQualifiedName~Nightly
                                  |Name=MyTestMethod)"</target>
      </trans-unit>
      <trans-unit id="TestCaseFilterValueRequired">
        <source>The /TestCaseFilter argument requires the filter value.
        Filter value can be &lt;property&gt;=&lt;value&gt; type.
        Examples: "Priority=1", "TestCategory=Nightly"</source>
        <note></note>
        <target state="translated">/TestCaseFilter 引数には、フィルター値が必要です。
        フィルター値は、&lt;プロパティ&gt;=&lt;値&gt; という型で指定できます。
        例: "Priority=1"、"TestCategory=Nightly"</target>
      </trans-unit>
      <trans-unit id="InvalidTestCaseFilterValueForSpecificTests">
        <source>The /TestCaseFilter argument cannot be specified with /Tests. Filtering of test cases is not applicable when tests are specified.</source>
        <note></note>
        <target state="translated">/TestCaseFilter 引数を /Tests と共に指定することはできません。テストが指定されている場合、テスト ケースのフィルター処理は適用できません。</target>
      </trans-unit>
      <trans-unit id="NonDefaultFrameworkAndOrArchDetected">
        <source>{0} is built for {1}/{2}. The test assemblies specified in a run should have a common target .Net framework and platform.</source>
        <note></note>
        <target state="translated">{0} は {1}/{2} 用にビルドされています。実行で指定されるテスト アセンブリは、対象とする .NET Framework およびプラットフォームを共通にする必要があります。</target>
      </trans-unit>
      <trans-unit id="RunSingleAppContainerSource">
        <source>Only one app package (.appx file) can be specified for running tests.</source>
        <note></note>
        <target state="translated">実行する複数のテストには、1 つのアプリ パッケージ (.appx ファイル) だけを指定できます。</target>
      </trans-unit>
      <trans-unit id="StartingDiscovery">
        <source>Starting test discovery, please wait...</source>
        <note></note>
        <target state="translated">テスト探索を開始しています。お待ちください...</target>
      </trans-unit>
      <trans-unit id="StartingExecution">
        <source>Starting test execution, please wait...</source>
        <note></note>
        <target state="translated">テスト実行を開始しています。お待ちください...</target>
      </trans-unit>
      <trans-unit id="DisablingDCOnExceptionWhileParsingDCInfo">
        <source>Reading diagnostic data adapter settings threw an running '{0}'. All diagnostic data adapters will be skipped in this run.</source>
        <note></note>
        <target state="translated">診断データ アダプターの設定の読み取り中に実行中の '{0}' がスローされました。この実行では、すべての診断データ アダプターがスキップされます。</target>
      </trans-unit>
      <trans-unit id="EnableCodeCoverageArgumentProcessorHelp">
        <source>/EnableCodeCoverage
      Enables data collector 'CodeCoverage' for the test run.</source>
        <note></note>
        <target state="translated">/EnableCodeCoverage
      テストの実行用にデータ コレクター 'CodeCoverage' を有効にします。</target>
      </trans-unit>
      <trans-unit id="InvalidEnableCodeCoverageCommand">
        <source>Argument {0} is not expected in the 'EnableCodeCoverage' command. Specify the command without the argument (Example: vstest.console.exe myTests.dll /EnableCodeCoverage) and try again.</source>
        <note></note>
        <target state="translated">引数 {0} は、'EnableCodeCoverage' コマンドでは必要ではありません。引数なしでコマンドを指定し (例: vstest.console.exe myTests.dll /EnableCodeCoverage)、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="NoTestEntryPoint">
        <source>App package '{0}' does not has test executor entry point. For running unit tests for Windows Store apps, create app package using Windows Store app Unit Test Library project.</source>
        <note></note>
        <target state="translated">アプリ パッケージ '{0}' に、テスト実行プログラムのエントリ ポイントがありません。Windows ストア アプリの単体テストを実行する場合は、Windows ストア アプリ単体テスト ライブラリ プロジェクトを使用して、アプリ パッケージを作成してください。</target>
      </trans-unit>
      <trans-unit id="DisablingCodeCoverageInAppContainerTestExecution">
        <source>Code coverage is not available for Windows Store apps. Code coverage analysis skipped for this test run.</source>
        <note></note>
        <target state="translated">Windows ストア アプリではコード カバレッジを使用できません。このテスト実行ではコード カバレッジ分析はスキップされました。</target>
      </trans-unit>
      <trans-unit id="SomeTestsUnavailableAfterFiltering">
        <source>A total of {0} tests were discovered but some tests do not match the specified selection criteria({1}). Use right value(s) and try again.</source>
        <note></note>
        <target state="translated">合計 {0} 個のテストが検出されましたが、指定された選択条件 ({1}) に一致しないテストがあります。適切な値を使用して、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="TestAdapterPathHelp">
        <source>--TestAdapterPath|/TestAdapterPath
      This makes vstest.console.exe process use custom test adapters
      from a given path (if any) in the test run. 
      Example  /TestAdapterPath:&lt;pathToCustomAdapters&gt;</source>
        <note></note>
        <target state="translated">--TestAdapterPath|/TestAdapterPath
      テストの実行で、vstest.console.exe プロセスが指定されたパス (ある場合) 
      からのカスタム テスト アダプターを使用するようにします。
      例  /TestAdapterPath:&lt;pathToCustomAdapters&gt;</target>
      </trans-unit>
      <trans-unit id="TestAdapterPathValueRequired">
        <source>The /TestAdapterPath parameter requires a value, which is path of a location containing custom test adapters. Example:  /TestAdapterPath:c:\MyCustomAdapters</source>
        <note></note>
        <target state="translated">/TestAdapterPath パラメーターには、値として、カスタム テスト アダプターがある場所のパスが必要です。例: /TestAdapterPath:c:\MyCustomAdapters</target>
      </trans-unit>
      <trans-unit id="InvalidTestAdapterPathCommand">
        <source>The path '{0}' specified in the 'TestAdapterPath' is invalid. Error: {1}</source>
        <note></note>
        <target state="translated">'TestAdapterPath' に指定されているパス '{0}' は無効です。エラー: {1}</target>
      </trans-unit>
      <trans-unit id="TestAdapterPathDoesNotExist">
        <source>The custom test adapter search path provided was not found, provide a valid path and try again.</source>
        <note></note>
        <target state="translated">カスタム テスト アダプターの指定された検索パスが見つかりませんでした。有効なパスを指定して、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="NoAdaptersFoundInTestAdapterPath">
        <source>The path '{0}' specified in the 'TestAdapterPath' does not contain any test adapters, provide a valid path and try again.</source>
        <note></note>
        <target state="translated">'TestAdapterPath' に指定されているパス '{0}' には、テスト アダプターがありません。有効なパスを指定して、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="PhoneAppContainerTestPrerequisiteFail">
        <source>Could not start test run for the tests for Windows Phone app: {0}.</source>
        <note></note>
        <target state="translated">Windows Phone アプリに対するテストのテスト実行を開始できません: {0}。</target>
      </trans-unit>
      <trans-unit id="SwitchToIsolationInPhoneAppContainerMode">
        <source>Using Isolation mode to run unit tests for Windows Phone apps. Use the /InIsolation parameter to suppress this warning.</source>
        <note></note>
        <target state="translated">Windows Phone アプリの単体テストを実行するために、分離モードを使用しています。この警告が表示されないようにするには、/InIsolation パラメーターを使用します。</target>
      </trans-unit>
      <trans-unit id="DisablingCodeCoverageInPhoneAppContainerTestExecution">
        <source>Code coverage is not available for Windows Phone apps. Code coverage analysis skipped for this test run.</source>
        <note></note>
        <target state="translated">Windows Phone アプリではコード カバレッジを使用できません。このテスト実行ではコード カバレッジ分析はスキップされました。</target>
      </trans-unit>
      <trans-unit id="DisablingDataCollectionInPhoneAppContainerTestExecution">
        <source>Diagnostic data adapters are not supported when running unit tests for Windows Phone apps. Remove diagnostic data adapters settings from settings.</source>
        <note></note>
        <target state="translated">Windows Phone アプリの単体テストの実行時は、診断データ アダプターはサポートされません。設定から診断データ アダプターの設定を削除してください。</target>
      </trans-unit>
      <trans-unit id="PhoneNoTestEntryPoint">
        <source>App package '{0}' does not has test executor entry point. For running unit tests for Windows Phone apps, create app package using Windows Phone Unit Test App project.</source>
        <note></note>
        <target state="translated">アプリ パッケージ '{0}' に、テスト実行プログラムのエントリ ポイントがありません。Windows Phone アプリの単体テストを実行する場合は、Windows Phone 単体テスト アプリ プロジェクトを使用して、アプリ パッケージを作成してください。</target>
      </trans-unit>
      <trans-unit id="TestSettingsFrameworkMismatch">
        <source>Using framework {0} to run the tests. Specify /Framework:{1} to suppress this warning.</source>
        <note></note>
        <target state="translated">フレームワーク {0} を使用してテストを実行します。この警告を表示しないようにするには、/Framework:{1} を指定します。</target>
      </trans-unit>
      <trans-unit id="AppxBundleSourceWarning">
        <source>No test found in the specified test containers. Additionally, Microsoft Windows Store Unit test adapter does not support .appxbundle files. Create an appx (set Generate App bundle option to Never) when creating App Package and try again.</source>
        <note></note>
        <target state="translated">指定されたテスト コンテナーにテストが見つかりません。さらに、Microsoft Windows ストア単体テスト アダプターで .appxbundle ファイルがサポートされていません。アプリ パッケージの作成時に appx ([アプリ バンドルの生成] オプションを [しない] に設定) し、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="ParallelArgumentProcessorHelp">
        <source>--Parallel|/Parallel
      Specifies that the tests be executed in parallel. By default up
      to all available cores on the machine may be used.
      The number of cores to use may be configured using a settings file.</source>
        <note></note>
        <target state="translated">--Parallel|/Parallel
      テストを並列で実行するように指定します。既定では、
      コンピューター上の使用可能なコア数まで使用できます。
      使用するコアの数は、設定ファイルを使用して構成できます。</target>
      </trans-unit>
      <trans-unit id="InvalidParallelCommand">
        <source>Argument {0} is not expected in the 'Parallel' command. Specify the command without the argument (Example: vstest.console.exe myTests.dll /Parallel) and try again.</source>
        <note></note>
        <target state="translated">引数 {0} は 'Parallel' コマンド内で使用できません。引数を使用せずにコマンドを指定して (例: vstest.console.exe myTests.dll /Parallel)、もう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="CannotBeNullOrEmpty">
        <source>Cannot be null or empty</source>
        <note></note>
        <target state="translated">null または空にすることはできません。</target>
      </trans-unit>
      <trans-unit id="PortArgumentHelp">
        <source>--Port|/Port:&lt;Port&gt;
      The Port for socket connection and receiving the event messages.</source>
        <note></note>
        <target state="translated">--Port|/Port:&lt;Port&gt;
      ソケット接続およびイベント メッセージを受信するためのポートです。</target>
      </trans-unit>
      <trans-unit id="InvalidPortArgument">
        <source>The --Port|/Port argument requires the port number which is an integer. Specify the port for socket connection and receiving the event messages.</source>
        <note></note>
        <target state="translated">--Port|/Port 引数には、整数であるポート番号を指定する必要があります。ソケット接続およびイベント メッセージ受信用のポートを指定してください。</target>
      </trans-unit>
      <trans-unit id="AssemblyPathInvalid">
        <source>Unable to find the assembly under test. Please make sure that the project is built.</source>
        <note></note>
        <target state="translated">テスト中のアセンブリが見つかりません。プロジェクトがビルドされたことをご確認ください。</target>
      </trans-unit>
      <trans-unit id="ProjectPathNotFound">
        <source>The Path {0} does not exist.</source>
        <note></note>
        <target state="translated">パス {0} は存在しません。</target>
      </trans-unit>
      <trans-unit id="BuildBasePathArgumentHelp">
        <source>--BuildBasePath|/BuildBasePath:&lt;BuildBasePath&gt;
      The directory containing the temporary outputs.</source>
        <note></note>
        <target state="translated">--BuildBasePath|/BuildBasePath:&lt;BuildBasePath&gt;
      一時的な出力を含むディレクトリです。</target>
      </trans-unit>
      <trans-unit id="ConfigurationArgumentHelp">
        <source>-c|--Configuration|/c|/Configuration:&lt;Configuration&gt;
      The configuration the project is built for i.e. Debug/Release</source>
        <note></note>
        <target state="translated">-c|--Configuration|/c|/Configuration:&lt;Configuration&gt;
      プロジェクトをビルドする構成です。つまり、Debug/Release</target>
      </trans-unit>
      <trans-unit id="InvalidConfiguration">
        <source>The given configuration is invalid.</source>
        <note></note>
        <target state="translated">指定の構成が無効です。</target>
      </trans-unit>
      <trans-unit id="OutputArgumentHelp">
        <source>-o|--Output|/o|/Output:&lt;Output&gt;
      The directory containing the binaries to run.</source>
        <note></note>
        <target state="translated">-o|--Output|/o|/Output:&lt;Output&gt;
      実行するバイナリを含むディレクトリです。</target>
      </trans-unit>
      <trans-unit id="BuildBasePathNotFound">
        <source>The BuildBasePath was not found, provide a valid path and try again.</source>
        <note></note>
        <target state="translated">BuildBasePath が見つかりませんでした。有効なパスを指定してもう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="OutputPathNotFound">
        <source>The Output path was not found, provide a valid path and try again.</source>
        <note></note>
        <target state="translated">Output パスが見つかりませんでした。有効なパスを指定してもう一度お試しください。</target>
      </trans-unit>
      <trans-unit id="AddnlInfoMessagesBanner">
        <source>Additional Information Messages:</source>
        <note></note>
        <target state="translated">追加情報メッセージ:</target>
      </trans-unit>
      <trans-unit id="Days">
        <source>Days</source>
        <note></note>
        <target state="translated">日数</target>
      </trans-unit>
      <trans-unit id="ErrorMessageBanner">
        <source>Error Message:</source>
        <note></note>
        <target state="translated">エラー メッセージ:</target>
      </trans-unit>
      <trans-unit id="ExecutionTimeFormatString">
        <source> Total time: {0:0.0000} {1}</source>
        <note></note>
        <target state="translated">合計時間: {0:0.0000} {1}</target>
      </trans-unit>
      <trans-unit id="Hours">
        <source>Hours</source>
        <note></note>
        <target state="translated">時間</target>
      </trans-unit>
      <trans-unit id="LoggerNotFound">
        <source>Could not find a test logger with URI or FriendlyName '{0}'.</source>
        <note></note>
        <target state="translated">URI または FriendlyName が '{0}' のテスト ロガーは見つかりませんでした。</target>
      </trans-unit>
      <trans-unit id="Minutes">
        <source>Minutes</source>
        <note></note>
        <target state="translated">分</target>
      </trans-unit>
      <trans-unit id="Seconds">
        <source>Seconds</source>
        <note></note>
        <target state="translated">秒</target>
      </trans-unit>
      <trans-unit id="StacktraceBanner">
        <source>Stack Trace:</source>
        <note></note>
        <target state="translated">スタック トレース:</target>
      </trans-unit>
      <trans-unit id="StdErrMessagesBanner">
        <source>Standard Error Messages:</source>
        <note></note>
        <target state="translated">標準エラー メッセージ:</target>
      </trans-unit>
      <trans-unit id="StdOutMessagesBanner">
        <source>Standard Output Messages:</source>
        <note></note>
        <target state="translated">標準出力メッセージ:</target>
      </trans-unit>
      <trans-unit id="AttachmentsBanner">
        <source>Attachments:</source>
        <note></note>
        <target state="translated">添付ファイル:</target>
      </trans-unit>
      <trans-unit id="AttachmentOutputFormat">
        <source>  {0}</source>
        <note></note>
        <target state="translated">  {0}</target>
      </trans-unit>
      <trans-unit id="NoTestsAvailableInSources">
        <source>No test is available in {0}. Make sure that installed test discoverers &amp; executors, platform &amp; framework version settings are appropriate and try again.</source>
        <note></note>
        <target state="translated">{0} で使用できるテストはありません。インストールされているテスト探索プログラム、実行プログラム、プラットフォーム、およびフレームワークのバージョン設定が適切であることを確認し、再試行してください。</target>
      </trans-unit>
      <trans-unit id="FailedTestIndicator">
        <source>Failed</source>
        <note>Message which is written to the console when a test fails.</note>
        <target state="translated">失敗</target>
      </trans-unit>
      <trans-unit id="PassedTestIndicator">
        <source>Passed</source>
        <note>Message which is written to the console when a test passes.</note>
        <target state="translated">成功</target>
      </trans-unit>
      <trans-unit id="SkippedTestIndicator">
        <source>Skipped</source>
        <note></note>
        <target state="translated">スキップ</target>
      </trans-unit>
      <trans-unit id="DiscoveryFailed">
        <source>Discovery failed for given sources. Exception : {0}</source>
        <note></note>
        <target state="translated">指定したソースで検出が失敗しました。例外 : {0}</target>
      </trans-unit>
      <trans-unit id="ParentProcessIdArgumentHelp">
        <source>--ParentProcessId|/ParentProcessId:&lt;ParentProcessId&gt;
      Process Id of the Parent Process responsible for launching current process.</source>
        <note></note>
        <target state="translated">--ParentProcessId|/ParentProcessId:&lt;ParentProcessId&gt;
      現在のプロセスを起動する親プロセスのプロセス ID です。</target>
      </trans-unit>
      <trans-unit id="InvalidParentProcessIdArgument">
        <source>The --ParentProcessId|/ParentProcessId argument requires the process id which is an integer. Specify the process id of the parent process that launched this process.</source>
        <note></note>
        <target state="translated">--ParentProcessId|/ParentProcessId 引数には整数であるプロセス ID を指定する必要があります。このプロセスを開始した親プロセスのプロセス ID を指定してください。</target>
      </trans-unit>
      <trans-unit id="HelpArgumentsText">
        <source>Arguments:</source>
        <note></note>
        <target state="translated">引数:</target>
      </trans-unit>
      <trans-unit id="EnableDiagUsage">
        <source>--Diag|/Diag:&lt;Path to log file&gt;
      Enable logs for test platform.
      Logs are written to the provided file.

      Change the trace level for logs as shown below
      Example: /Diag:&lt;Path to log file&gt;;tracelevel=&lt;Defaults to "verbose"&gt;
      Allowed values for tracelevel: off, error, warning, info and verbose.</source>
        <note></note>
        <target state="translated">--Diag|/Diag:&lt;Path to log file&gt;
      テスト プラットフォームに対してログを有効にします。
      ログは指定されたファイルに書き込まれます。

      次のようにログのトレース レベルを変更します。
      例: /Diag:&lt;Path to log file&gt;;tracelevel=&lt;Defaults to "verbose"&gt;
      トレース レベルに使用できる値: off、error、warning、info、verbose。</target>
      </trans-unit>
      <trans-unit id="LoggerFileIsReadOnly">
        <source>The file {0} provided is read only</source>
        <note></note>
        <target state="translated">指定されたファイル {0} は読み取り専用です。</target>
      </trans-unit>
      <trans-unit id="DesignModeClientTimeoutError">
        <source>Timeout to connect or process request for DesignModeClient on port: {0}</source>
        <target state="translated">ポートで接続または DesignModeClient の要求処理のタイムアウト: {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="NotRunTestIndicator">
        <source>Not Run</source>
        <target state="translated">未実行</target>
        <note></note>
      </trans-unit>
      <trans-unit id="CLIRunSettingsArgumentHelp">
        <source>RunSettings arguments:
      Arguments to pass runsettings configurations through commandline. Arguments may be specified as name-value pair of the form [name]=[value] after "-- ". Note the space after --. 
      Use a space to separate multiple [name]=[value].
      More info on RunSettings arguments support: https://aka.ms/vstest-runsettings-arguments</source>
        <target state="translated">RunSettings 引数:
      commandline 経由で runsettings 構成を渡す引数。引数は、"-- " の後に [name]=[value] の形式で名前と値のペアとして指定できます。-- の後のスペースにご注意ください。
      複数の [name]=[value] を区切るにはスペースを使用します。
      RunSettings 引数のサポートに関する詳細情報: https://aka.ms/vstest-runsettings-arguments</target>
        <note></note>
      </trans-unit>
      <trans-unit id="MalformedRunSettingsKey">
        <source>One or more runsettings provided contain invalid token</source>
        <target state="translated">指定の runsettings の 1 つ以上に無効なトークンが含まれています。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ResultsDirectoryArgumentHelp">
        <source>--ResultsDirectory|/ResultsDirectory
      Test results directory will be created in specified path if not exists.
      Example  /ResultsDirectory:&lt;pathToResultsDirectory&gt;</source>
        <target state="translated">--ResultsDirectory|/ResultsDirectory
      存在しない場合、テスト結果のディレクトリが指定されたパスに作成されます。
      例: /ResultsDirectory:&lt;pathToResultsDirectory&gt;</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ResultsDirectoryValueRequired">
        <source>The /ResultsDirectory parameter requires a value, where the test results should be saved. Example:  /ResultsDirectory:c:\MyTestResultsDirectory</source>
        <target state="translated">/ResultsDirectory パラメーターには値が必要であり、そこにテスト結果が保存されます。例:  /ResultsDirectory:c:\MyTestResultsDirectory</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidResultsDirectoryPathCommand">
        <source>The path '{0}' specified in the 'ResultsDirectory' is invalid. Error: {1}</source>
        <target state="translated">'ResultsDirectory' に指定されているパス '{0}' は無効です。エラー: {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InIsolationDeprecated">
        <source>The /InIsolation flag is deprecated. The tests are always run in a separate process</source>
        <target state="translated">/InIsolation フラグは非推奨です。テストは常に別個のプロセスで実行されます</target>
        <note></note>
      </trans-unit>
      <trans-unit id="VstestDiagLogOutputPath">
        <source>Logging Vstest Diagnostics in file: {0}</source>
        <target state="translated">次のファイルで Vstest 診断をログ記録しています: {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="CollectArgumentHelp">
        <source>--Collect|/Collect:&lt;DataCollector FriendlyName&gt;
      Enables data collector for the test run. More info here : https://aka.ms/vstest-collect</source>
        <target state="translated">--Collect|/Collect:&lt;DataCollector FriendlyName&gt;
      テストの実行用のデータ コレクターを有効にします。詳細情報はこちら: https://aka.ms/vstest-collect</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DataCollectorFriendlyNameInvalid">
        <source>The Data Collector friendly name '{0}' is not valid.  The Data Collector will be ignored.</source>
        <target state="translated">データ コレクターのフレンドリ名 '{0}' が無効です。データ コレクターは無視されます。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DbgTrcMessagesBanner">
        <source>Debug Traces Messages:</source>
        <target state="translated">デバッグ トレース メッセージ:</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EnableBlameUsage">
        <source>--Blame|/Blame:[CollectDump];[CollectAlways]=[Value];[DumpType]=[Value]
      Runs the test in blame mode. This option is helpful in isolating the problematic test causing test host crash.
      It creates an output file in the current directory as "Sequence.xml",
      that captures the order of execution of test before the crash.
      You may optionally choose to collect process dump for the test host.
      When you choose to collect dump, by default, a mini dump will be collected on a crash.
      You may also choose to override this default behaviour by some optional parameters:
      CollectAlways - To collect dump on exit even if there is no crash (true/false) 
      DumpType - To specify dump type (mini/full).
      Example: /Blame
               /Blame:CollectDump
               /Blame:CollectDump;CollectAlways=true;DumpType=full</source>
        <target state="translated">--Blame|/Blame:[CollectDump];[CollectAlways]=[Value];[DumpType]=[Value]
      テストを Blame モードで実行します。このオプションは、テスト ホストのクラッシュを引き起こしているテストを分離するのに役立ちます。
      現在のディレクトリに "Sequence.xml" という出力ファイルを作成し、
      そのファイルにクラッシュ前のテストの実行順序をキャプチャします。
      必要に応じて、テスト ホストのプロセス ダンプを収集することもできます。
      ダンプを収集するように選択すると、既定ではクラッシュ時にミニ ダンプが収集されます。
      この既定の動作を次のオプション パラメーターでオーバーライドすることもできます:
      CollectAlways - クラッシュが発生していなくても終了時にダンプを収集します (true/false) 
      DumpType - ダンプの種類を指定します (mini/full)。
      例: /Blame
               /Blame:CollectDump
               /Blame:CollectDump;CollectAlways=true;DumpType=full</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunAborted">
        <source>Test Run Aborted.</source>
        <target state="translated">テスト実行が中止されました。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunCanceled">
        <source>Test Run Canceled.</source>
        <target state="translated">テスト実行が取り消されました。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="OpenResponseFileError">
        <source>Error opening response file '{0}'</source>
        <target state="translated">応答ファイル '{0}' を開くときにエラーが発生しました</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ResponseFileArgumentHelp">
        <source>@&lt;file&gt;
      Read response file for more options.</source>
        <target state="translated">@&lt;file&gt;
      その他のオプションについては、応答ファイルを参照してください。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunSummaryForCanceledOrAbortedRun">
        <source>Total tests: Unknown</source>
        <target state="translated">テストの合計数: 不明</target>
        <note></note>
      </trans-unit>
      <trans-unit id="StringFormatToJoinTwoStrings">
        <source>{0} {1}</source>
        <target state="translated">{0} {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="SuggestTestAdapterPathIfNoTestsIsFound">
        <source>Additionally, path to test adapters can be specified using /TestAdapterPath command. Example  /TestAdapterPath:&lt;pathToCustomAdapters&gt;.</source>
        <target state="translated">さらに、/TestAdapterPath コマンドを使用してテスト アダプターのパスを指定できます。例: /TestAdapterPath:&lt;pathToCustomAdapters&gt;。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="UseVsixExtensionsDeprecation">
        <source>/UseVsixExtensions is getting deprecated. Please use /TestAdapterPath instead.</source>
        <target state="translated">/UseVsixExtensions は非推奨になりました。代わりに /TestAdapterPath を使用してください。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="DisableAutoFakesUsage">
        <source>--DisableAutoFakes|/DisableAutoFakes:&lt;true/false&gt;
     Example: /DisableAutoFakes:true</source>
        <target state="translated">--DisableAutoFakes|/DisableAutoFakes:&lt;true/false&gt;
     例: /DisableAutoFakes:true</target>
        <note></note>
      </trans-unit>
      <trans-unit id="CollectWithTestSettingErrorMessage">
        <source>--Collect|/Collect:"{0}" is not supported if test run is configured using testsettings.</source>
        <target state="translated">--Collect|/Collect:"{0}" は、testsettings を使用してテストの実行が構成されている場合、サポートされません。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="RunsettingsWithDCErrorMessage">
        <source>Data collectors other than Code Coverage and Microsoft Fakes configured via run settings are not supported with embedded test settings. Please see https://aka.ms/vstest-configure-datacollector for more information. Run settings: {0}.</source>
        <target state="translated">実行設定を経由して構成されているコード カバレッジと Microsoft Fakes 以外のデータ コレクターは、埋め込まれたテストの設定ではサポートされていません。詳細については、https://aka.ms/vstest-configure-datacollector をご覧ください。実行設定: {0}。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EnableLoggerArgumentsInNetCore">
        <source>--logger|/logger:&lt;Logger Uri/FriendlyName&gt;
      Specify a logger for test results. For example, to log results into a 
      Visual Studio Test Results File (TRX) use /logger:trx[;LogFileName=&lt;Defaults to unique file name&gt;]
      Creates file in TestResults directory with given LogFileName.

      Change the verbosity level in log messages for console logger as shown below
      Example: /logger:console;verbosity=&lt;Defaults to "minimal"&gt;
      Allowed values for verbosity: quiet, minimal, normal and detailed.

      Change the diagnostic level prefix for console logger as shown below
      Example: /logger:console;prefix=&lt;Defaults to "false"&gt;
      More info on Console Logger here : https://aka.ms/console-logger</source>
        <target state="translated">--logger|/logger:&lt;Logger Uri/FriendlyName&gt;
      テスト結果のロガーを指定します。たとえば、結果のログを
      Visual Studio のテスト結果ファイル (TRX) に記録するには、/logger:trx[;LogFileName=&lt;Defaults to unique file name&gt;] を使用します
      TestResults ディレクトリに、指定された LogFileName でファイルを作成します。

      コンソール ロガーのログ メッセージの詳細レベルを、次のように変更します
      例: /logger:console;verbosity=&lt;Defaults to "minimal"&gt;
      詳細レベルに使用できる値: quiet、minimal、normal、detailed。

      コンソール ロガーの診断レベルのプレフィックスを次のように変更します
      例: /logger:console;prefix=&lt;Defaults to "false"&gt;
      コンソール ロガーの詳細についてはこちらをご覧ください: https://aka.ms/console-logger</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BlameCollectDumpNotSupportedForPlatform">
        <source>Collecting crash dumps by option CollectDump for Blame is not supported for this platform.</source>
        <target state="translated">このプラットフォームでは、Blame の CollectDump オプションによるクラッシュ ダンプの収集はサポートされていません。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BlameIncorrectOption">
        <source>The blame parameter specified with blame, {0} is invalid. Ignoring this parameter.</source>
        <target state="translated">blame で指定された blame パラメーター {0} は無効です。このパラメーターは無視されます。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidDiagFilePath">
        <source>Diag file path '{0}' is not valid.</source>
        <target state="translated">Diag ファイル パス '{0}' は無効です。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidBlameArgument">
        <source>Blame argument '{0}' is not valid.</source>
        <target state="translated">Blame 引数 '{0}' は無効です。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidDiagArgument">
        <source>Diag argument '{0}' is not valid.</source>
        <target state="translated">Diag 引数 '{0}' は無効です。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidLoggerArgument">
        <source>Logger argument '{0}' is not valid.</source>
        <target state="translated">Logger 引数 '{0}' は無効です。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="Framework35NotSupported">
        <source>Framework35 is not supported. For projects targeting .Net Framework 3.5, test will run in CLR 4.0 "compatibility mode".</source>
        <target state="translated">Framework35 はサポートされていません。.Net Framework 3.5 を対象にしたプロジェクトでは、CLR 4.0 の「互換モード」でテストが実行されます。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="ProgressIndicatorString">
        <source>Test run in progress</source>
        <target state="translated">テストの実行が処理中</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunSummaryTotalTests">
        <source>Total tests: {0}</source>
        <target state="translated">テストの合計数: {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunSummaryFailedTests">
        <source>     Failed: {0}</source>
        <target state="translated">     失敗: {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunSummaryPassedTests">
        <source>     Passed: {0}</source>
        <target state="translated">     成功: {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunSummarySkippedTests">
        <source>    Skipped: {0}</source>
        <target state="translated">    スキップ: {0}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidArgument">
        <source>The argument {0} is invalid. Please use the /help option to check the list of valid arguments.</source>
        <target state="translated">引数 {0} が無効です。有効な引数の一覧を確認するには、/help オプションを使用してください。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestSourcesDiscovered">
        <source>A total of {0} test files matched the specified pattern.</source>
        <target state="translated">合計 {0} 個のテスト ファイルが指定されたパターンと一致しました。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="InvalidTestRunParameterArgument">
        <source>The test run parameter argument '{0}' is invalid. Please use the format below.
     Format: TestRunParameters.Parameter(name=\"&lt;name&gt;\", value=\"&lt;value&gt;\")</source>
        <target state="translated">テストの実行パラメーターの引数 '{0}' が無効です。以下の形式を使用してください。
     形式: TestRunParameters.Parameter(name=\"&lt;name&gt;\", value=\"&lt;value&gt;\")</target>
        <note></note>
      </trans-unit>
      <trans-unit id="BlameCollectDumpTestTimeoutNotSupportedForPlatform">
        <source>Collecting hang dumps by option CollectDump with TestTimeout for Blame is not supported for this platform.</source>
        <target state="translated">このプラットフォームでは、Blame の TestTimeout を使用する CollectDump オプションによるハング ダンプの収集はサポートされていません。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunSummary">
        <source>{0} - Failed: {1}, Passed: {2}, Skipped: {3}, Total: {4}, Duration: {5}</source>
        <target state="translated">{0} -失敗: {1}、合格: {2}、スキップ: {3}、合計: {4}、期間: {5}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="None">
        <source>None</source>
        <target state="translated">なし</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunSummaryAssemblyAndFramework">
        <source> - {0} {1}</source>
        <target state="translated"> - {0} {1}</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EnvironmentArgumentHelp">
        <source>-e|--Environment|/e|/Environment:&lt;NAME&gt;=&lt;VALUE&gt;
      Sets the value of an environment variable. Creates the variable if it does not exist, overrides if it does. This will imply /InIsolation switch and force the tests to be run in an isolated process.
      
      This argument can be specified multiple times to provide multiple variables.

      Example: -e:VARIABLE1=VALUE1
               -e:ANOTHER_VARIABLE="VALUE WITH SPACES"
               -e:ANOTHER_VARIABLE="VALUE;seperated with;semicolons"</source>
        <target state="translated">-e|--Environment|/e|/Environment:&lt;NAME&gt;=&lt;VALUE&gt;
      環境変数の値を設定します。変数が存在しない場合は作成され、存在する場合はオーバーライドされます。これにより、/InIsolation スイッチが暗黙に指定されるため、テストは強制的に分離プロセスで実行されます。
      
      この引数は、複数の変数を指定するために複数回指定できます。

      例: -e:VARIABLE1=VALUE1
               -e:ANOTHER_VARIABLE="VALUE WITH SPACES"
               -e:ANOTHER_VARIABLE="VALUE;seperated with;semicolons"</target>
        <note></note>
      </trans-unit>
      <trans-unit id="EnvironmentVariableXIsOverriden">
        <source>Environment variable '{0}' was already defined, but it's overridden by -Environment argument.</source>
        <target state="translated">環境変数 '{0}' は既に定義されていますが、-Environment 引数でオーバーライドされます。</target>
        <note></note>
      </trans-unit>
      <trans-unit id="TestRunAbortedWithError">
        <source>Test Run Aborted with error {0}.</source>
        <target state="translated">テストの実行がエラー {0} により中止されました。</target>
        <note></note>
      </trans-unit>
    </body>
  </file>
</xliff>