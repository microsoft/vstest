<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup Label="Version settings">
    <!-- This repo version -->
    <!--
        Workaround for https://github.com/microsoft/vstest/issues/4544
        Use semantic versioning V1 because V2 will produce version like 17.7.0-preview.23280.1+94103c3f and DTAExecutionHost
        is trying to parse that version and will consider any version with more than 4 `.` in it as invalid.
    -->
    <SemanticVersioningV1>true</SemanticVersioningV1>
    <!--
      IncludeSourceRevisionInInformationalVersion prevents ProductVersion (on file), and AssemblyInformationalVersion
      from appending +<commitId>, which breaks DTAAgent.
    -->
    <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
    <VersionPrefix>17.14.0</VersionPrefix>
    <PreReleaseVersionLabel>preview</PreReleaseVersionLabel>
  </PropertyGroup>
  <PropertyGroup Label="Arcade settings">
    <!-- Ensure we use xliff task tool - true is the default but we make it explicit here -->
    <UsingToolXliff>true</UsingToolXliff>
    <!-- Opt-in to Arcade tools for building VSIX projects. -->
    <UsingToolVSSDK>true</UsingToolVSSDK>
    <!-- Don't allow netstandard1.x dependencies when building from source in this repository. -->
    <FlagNetStandard1XDependencies Condition="'$(DotNetBuildSourceOnly)' == 'true'">true</FlagNetStandard1XDependencies>
  </PropertyGroup>
  <PropertyGroup Label="VSTest dependencies">
    <CoverletCoverageVersion>1.2.0</CoverletCoverageVersion>
    <!--
        When updating the version of Microsoft.Build.Utilities.Core, go check on nuget.org which TFMs it targets.
        Because you will need to update Microsoft.TestPlatform.Build.UnitTests to build using that concrete .NET TFM, e.g. net8.0 for 17.8.3.
        Otherwise it will restore the netstandard2.0 *reference* library into test project bin, and the test project will fail
        with File not found error.

        Could not load file or assembly 'Microsoft.Build.Utilities.Core...
    -->
    <!--
      Lot of these versions are not the latest present on nuget.org, we need to use versions that are present in SourceBuild to
      avoid introducing pre-builts. https://github.com/dotnet/source-build-reference-packages/tree/main/src/referencePackages/src
    -->
    <MicrosoftBuildFrameworkPackageVersion>17.8.3</MicrosoftBuildFrameworkPackageVersion>
    <MicrosoftBuildPackageVersion>$(MicrosoftBuildFrameworkPackageVersion)</MicrosoftBuildPackageVersion>
    <MicrosoftBuildUtilitiesCorePackageVersion>$(MicrosoftBuildFrameworkPackageVersion)</MicrosoftBuildUtilitiesCorePackageVersion>
    <MicrosoftBuildFrameworkReferenceOnly>$(MicrosoftBuildFrameworkPackageVersion)</MicrosoftBuildFrameworkReferenceOnly>
    <MicrosoftBuildReferenceOnly>$(MicrosoftBuildFrameworkPackageVersion)</MicrosoftBuildReferenceOnly>
    <MicrosoftBuildUtilitiesCoreReferenceOnly>$(MicrosoftBuildFrameworkPackageVersion)</MicrosoftBuildUtilitiesCoreReferenceOnly>
    <MicrosoftCodeAnalysisVersion>4.11.0</MicrosoftCodeAnalysisVersion>
    <MicrosoftCodeAnalysisBannedApiAnalyzersVersion>3.3.4</MicrosoftCodeAnalysisBannedApiAnalyzersVersion>
    <MicrosoftCodeAnalysisPublicApiAnalyzersVersion>3.3.4</MicrosoftCodeAnalysisPublicApiAnalyzersVersion>
    <MicrosoftCodeCoverageIOVersion>17.7.0</MicrosoftCodeCoverageIOVersion>
    <MicrosoftDiagnosticsNETCoreClientVersion>0.2.606601</MicrosoftDiagnosticsNETCoreClientVersion>
    <MicrosoftExtensionsDependencyModelPackageVersion>6.0.0</MicrosoftExtensionsDependencyModelPackageVersion>
    <MicrosoftExtensionsFileSystemGlobbingVersion>6.0.0</MicrosoftExtensionsFileSystemGlobbingVersion>
    <MicrosoftFakesVersion>17.12.0</MicrosoftFakesVersion>
    <MicrosoftInternalCodeCoverageVersion>17.14.0-preview.25067.3</MicrosoftInternalCodeCoverageVersion>
    <MicrosoftVisualStudioDiagnosticsUtilitiesVersion>17.13.35716.53</MicrosoftVisualStudioDiagnosticsUtilitiesVersion>
    <MicrosoftVisualStudioEnterpriseAspNetHelper>$(MicrosoftVisualStudioDiagnosticsUtilitiesVersion)</MicrosoftVisualStudioEnterpriseAspNetHelper>
    <MicrosoftVisualStudioInteropVersion>17.12.40418</MicrosoftVisualStudioInteropVersion>
    <MicrosoftVSTelemetryVersion>17.13.24</MicrosoftVSTelemetryVersion>
    <MicrosoftVSUtilitiesInternalVersion>16.3.90</MicrosoftVSUtilitiesInternalVersion>
    <MicrosoftVSSDKBuildToolsVersion>17.4.2124</MicrosoftVSSDKBuildToolsVersion>
    <MicrosoftWin32RegistryVersion>5.0.0</MicrosoftWin32RegistryVersion>
    <NewtonsoftJsonVersion>13.0.3</NewtonsoftJsonVersion>
    <SystemCollectionsImmutableVersion>8.0.0</SystemCollectionsImmutableVersion>
    <SystemComponentModelCompositionVersion>8.0.0</SystemComponentModelCompositionVersion>
    <SystemMemoryVersion>4.5.5</SystemMemoryVersion>
    <SystemNetHttpVersion>4.3.4</SystemNetHttpVersion>
    <SystemReflectionMetadataVersion>8.0.0</SystemReflectionMetadataVersion>
    <SystemUriVersion>4.3.2</SystemUriVersion>
    <TestPlatformExternalsVersion>17.10.0-preview-2-34602-162</TestPlatformExternalsVersion>
    <MicrosoftInternalTestPlatformExtensions>17.10.0-preview-2-34602-162</MicrosoftInternalTestPlatformExtensions>
    <TestPlatformMSDiaVersion>17.12.35519.223</TestPlatformMSDiaVersion>
    <SystemSecurityPrincipalWindowsVersion>5.0.0</SystemSecurityPrincipalWindowsVersion>
    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>
  </PropertyGroup>
  <PropertyGroup Label="VSTest test settings">
    <!-- Name of the elements must be in sync with test\Microsoft.TestPlatform.TestUtilities\IntegrationTestBase.cs -->
    <FluentAssertionsVersion>6.11.0</FluentAssertionsVersion>
    <MoqVersion>4.16.1</MoqVersion>
    <!-- For coverage use our own package on latest stable -->
    <MicrosoftCodeCoverageVersion>17.9.0</MicrosoftCodeCoverageVersion>
    <!-- These versions are used for running unit tests, and running acceptance tests. They are also used as the default version for projects
    in TestAssets.sln to allow running and debugging tests in that solution directly in VS without having to run them via AcceptanceTests. -->
    <MSTestTestFrameworkVersion>3.4.3</MSTestTestFrameworkVersion>
    <MSTestTestAdapterVersion>3.4.3</MSTestTestAdapterVersion>
    <MSTestAssertExtensionVersion>1.0.3-preview</MSTestAssertExtensionVersion>
    <XUnitFrameworkVersion>2.4.2</XUnitFrameworkVersion>
    <XUnitAdapterVersion>2.4.5</XUnitAdapterVersion>
    <XUnitConsoleRunnerVersion>2.4.2</XUnitConsoleRunnerVersion>
    <NUnit3FrameworkVersion>3.14.0</NUnit3FrameworkVersion>
    <NUnit3AdapterVersion>3.17.0</NUnit3AdapterVersion>
    <NUnitConsoleRunnerVersion>3.16.3</NUnitConsoleRunnerVersion>
    <!--
      Versions that are used when building projects from TestAssets.sln for compatibility tests. See Invoke-TestAssetsBuild in scripts/build.ps1.
      Exact versions are used to avoid Nuget substituting them by closest match, if we make a typo.
      These versions need to be "statically" readable because we read this file as xml in our build and tests.
    -->
    <!-- <MSTestFrameworkLatestVersion></MSTestFrameworkLatestVersion> is not here, because we don't build MSTest locally, so we don't have access to the latest version. -->
    <MSTestFrameworkLatestPreviewVersion>[3.4.3]</MSTestFrameworkLatestPreviewVersion>
    <MSTestFrameworkLatestStableVersion>[3.4.3]</MSTestFrameworkLatestStableVersion>
    <MSTestFrameworkRecentStableVersion>[3.3.1]</MSTestFrameworkRecentStableVersion>
    <MSTestFrameworkMostDownloadedVersion>[2.2.10]</MSTestFrameworkMostDownloadedVersion>
    <MSTestFrameworkPreviousStableVersion>[2.2.10]</MSTestFrameworkPreviousStableVersion>
    <MSTestFrameworkLegacyStableVersion>[1.4.0]</MSTestFrameworkLegacyStableVersion>
    <!-- Versions that are used to restore previous versions of console, translation layer, and test.sdk for compatibility tests.
    See Invoke-TestAssetsBuild in scripts/build.ps1. Exact versions are used to avoid Nuget substituting them by closest match, if we make a typo.
    These versions need to be "statically" readable because we read this file as xml in our build and tests. -->
    <!-- <VSTestConsoleLatestVersion></VSTestConsoleLatestVersion> is not here, NETTestSdkVersion is used instead, because that is the version of the locally built latest package.  -->
    <VSTestConsoleLatestPreviewVersion>[17.10.0]</VSTestConsoleLatestPreviewVersion>
    <VSTestConsoleLatestStableVersion>[17.10.0]</VSTestConsoleLatestStableVersion>
    <VSTestConsoleRecentStableVersion>[17.9.0]</VSTestConsoleRecentStableVersion>
    <VSTestConsoleMostDownloadedVersion>[17.6.2]</VSTestConsoleMostDownloadedVersion>
    <VSTestConsolePreviousStableVersion>[16.11.0]</VSTestConsolePreviousStableVersion>
    <VSTestConsoleLegacyStableVersion>[15.9.2]</VSTestConsoleLegacyStableVersion>
    <ILAsmPackageVersion>5.0.0</ILAsmPackageVersion>
  </PropertyGroup>
</Project>
