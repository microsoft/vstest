# The default style generated by dotnet new editorconfig, with some minor changes.
# All changes are annotated with `# not default`

root = true

# All files
[*]
# indent_size intentionally not specified in this section.
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true

# Shell scripts
[*.sh]
end_of_line = lf
[*.{cmd,bat}]
end_of_line = crlf

# Xml files
[*.xml]
indent_size = 2

# Markdown files
[*.md]
indent_size = 2
trim_trailing_whitespace = false

# PowerShell scripts
[*.ps1]
indent_size = 4

# Visual Studio XML project files
[*.{csproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2
charset = utf-8

# Visual Studio and .NET related XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# YAML files
[*.{yml,yaml}]
indent_size = 2

# Translation files
[*.xlf]
indent_size = 2

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Do not set 'end_of_line = crlf' otherwise the rule IDE0055: Fix formatting will trigger on Linux/MAC OS.

# Indentation and spacing
indent_size = 4
tab_width = 4

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true

# License header
file_header_template = Copyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the MIT license. See LICENSE file in the project root for full license information.

# this. and Me. preferences
dotnet_style_qualification_for_event = false:warning    # not default, default is false:silent, helped with removing this. prefixes
dotnet_style_qualification_for_field = false:warning    # not default, same as above
dotnet_style_qualification_for_method = false:warning   # not default, same as above
dotnet_style_qualification_for_property = false:warning # not default, same as above

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = false:suggestion # not default, default is true, avoided because null references in object initializers are hard to diagnose from logs
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# IDE0074: Use compound assignment
dotnet_style_prefer_compound_assignment = true:warning  # not default, default is true:suggestion, increased severity to ensure it is used
dotnet_diagnostic.IDE0074.severity = warning            # not default, set in accordance to previous setting

# IDE0032: Use auto property
dotnet_style_prefer_auto_properties = true:warning  # not default, default is true:suggestion, increased severity to ensure it is used
dotnet_diagnostic.IDE0032.severity = warning        # not default, set in accordance to previous setting

# Field preferences
dotnet_style_readonly_field = true:warning

# Parameter preferences
dotnet_code_quality_unused_parameters = all:warning
# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = warning # not default, increased severity to go with simpler declarations

# IDE0005: Remove unnecessary import
dotnet_diagnostic.IDE0005.severity = warning # not default, increased severity to ensure it is used

# 'using' directive preferences
# Keep this in sync with the related C# rule: csharp_using_directive_placement
dotnet_diagnostic.IDE0065.severity = warning

# Use simple using statements
# Keep this in sync with th related C# rule: csharp_prefer_simple_using_statement
dotnet_diagnostic.IDE0063.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning # not default, increased severity to ensure it is always applied

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = warning # not default, increased severity to ensure it is always applied

# IDE0053: Use expression body for lambda expressions
# Keep this in sync with csharp_style_expression_bodied_lambdas
dotnet_diagnostic.IDE0053.severity = warning # not default, increased severity to ensure it is applied

# CA2016: Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = warning # not default, increased severity to ensure it is applied

# IDE0059: Remove unnecessary value assignment
dotnet_diagnostic.IDE0059.severity=warning # not default, increased severity to ensure it is applied

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity=warning # not default, increased severity to ensure it is applied

# IDE0077: Avoid legacy format target in global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0077.severity=warning # not default, increased severity to ensure it is applied

# IDE0076: Remove invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0076.severity=warning # not default, increased severity to ensure it is applied

# IDE0043: Invalid string format
dotnet_diagnostic.IDE0043.severity=warning # not default, increased severity to ensure it is applied

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity=warning # not default, increased severity to ensure it is applied

# CA1507: Use nameof in place of string
dotnet_diagnostic.CA1507.severity=warning # not default, increased severity to ensure it is applied

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity=warning # not default, increased severity to ensure it is applied

# IDE0019: Use pattern matching
# Keep this in sync with csharp_style_pattern_matching_over_as_with_null_check
dotnet_diagnostic.IDE0019.severity = warning # not default, increased severity to ensure it is applied

# IDE0020:
# Keep this in sync with csharp_style_pattern_matching_over_is_with_cast_check
dotnet_diagnostic.IDE0020.severity = warning # not default, increased severity to ensure it is applied

# IDE0078: Use pattern matching
# Keep this in sync with csharp_style_prefer_pattern_matching
dotnet_diagnostic.IDE0078.severity = warning # not default, increased severity to ensure it is applied

# IDE0083: Use pattern matching (not operator)
# Keep this in sync with csharp_style_prefer_not_pattern
dotnet_diagnostic.IDE0083.severity = warning # not default, increased severity to ensure it is applied

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning # not default, increased severity to ensure it is applied

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = warning # not default, increased severity to ensure it is applied

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = warning # not default, increased severity to ensure it is applied

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = warning # not default, increased severity to ensure it is always applied

# IDE0190: Null check can be simplified
# Keep this in sync with the related C# rule: csharp_style_prefer_parameter_null_checking
dotnet_diagnostic.IDE0190.severity = silent # not default, disabled as feature is no longer supported

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = warning # not default, increased severity to ensure it is applied

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = warning # not default, increased severity to ensure it is applied

# CA1837: Use Environment.ProcessId instead of Process.GetCurrentProcess().Id
dotnet_diagnostic.CA1837.severity = warning # not default, increased severity to ensure it is applied

# RS0041: Public members should not use oblivious types
# TODO: Move resx as internal OR use new resx generator (nullable aware) when available
dotnet_diagnostic.RS0041.severity = none # not default, decreased severity because of public resources (resx) not being nullable aware

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = warning # not default, increased severity to ensure it is applied

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = warning # not default, increased severity to ensure it is applied

# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = warning # not default, increased severity to ensure it is applied

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = warning # not default, increased severity to ensure it is applied

# CA1010: Collections should implement generic interface
dotnet_diagnostic.CA1010.severity = warning # not default, increased severity to ensure it is applied

# CA1047: Do not declare protected members in sealed types
dotnet_diagnostic.CA1047.severity = warning # not default, increased severity to ensure it is applied

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = warning # not default, increased severity to ensure it is applied

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = warning # not default, increased severity to ensure it is applied

# CA1069: Enums should not have duplicate values
dotnet_diagnostic.CA1069.severity = warning # not default, increased severity to ensure it is applied

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = warning # not default, increased severity to ensure it is applied

# IDE0064: Make struct fields writable
dotnet_diagnostic.IDE0064.severity = warning # not default, increased severity to ensure it is applied

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = warning # not default, increased severity to ensure it is applied

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = warning # not default, increased severity to ensure it is applied

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = warning # not default, increased severity to ensure it is applied

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = warning # not default, increased severity to ensure it is applied

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = warning # not default, increased severity to ensure it is applied

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = warning # not default, increased severity to ensure it is applied

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:silent               # not default, turned off for now
csharp_style_var_for_built_in_types = false:silent      # not default, turned off for now
csharp_style_var_when_type_is_apparent = false:silent   # not default, turned off for now

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
# Keep this in sync with IDE0053
csharp_style_expression_bodied_lambdas = true:warning # not default, increased severity to ensure it is applied
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
# Keep this in sync with IDE0019
csharp_style_pattern_matching_over_as_with_null_check = true:warning
# Keep this in sync with IDE0020 and IDE0038
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
# Keep this in sync with IDE0083
csharp_style_prefer_not_pattern = true:warning
# Keep this in sync with IDE0078
csharp_style_prefer_pattern_matching = true:warning
csharp_style_prefer_switch_expression = true:warning

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = true:warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent

# Code-block preferences
csharp_prefer_braces = true:silent
# Keep this in sync with the related .NET rule: IDE0063
csharp_prefer_simple_using_statement = true:warning # not default, default is true:suggestion, increased severity to ensure it is used

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_prefer_local_over_anonymous_function = false:suggestion # not default, default is true, avoided because we use anonymous functions in multiple places and it does not make the code clearer
csharp_style_prefer_index_operator = false:warning # not default, default is true, disabled because Index operator is not supported in all the TFMs we support. (supported on .Net Core 3.0+)
csharp_style_prefer_range_operator = false:warning # not default, default is true, disabled because Range operator is not supported in all the TFMs we support. (supported on .Net Core 3.0+)
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
# Keep this in sync with the related .NET rule: IDE0065
csharp_using_directive_placement = outside_namespace:warning

# IDE0190: Null check can be simplified
# Keep this in sync with the related .NET rule: IDE0190
csharp_style_prefer_parameter_null_checking = false # not default, disabled as no longer supported

#### .NET Formatting Rules ####

# IDE0055: Fix formatting - Set the severity of all .NET and C# formatting rules (https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules)
dotnet_diagnostic.IDE0055.severity = warning # ensure all formatting rules are enforced on build

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = none # Range operator is not supported in some TFMs.

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### .NET Naming styles ####

# not default, we have a lot of multiplatform code in compiler directives that defines methods, but keeps the bodies empty
# IDE0052: Remove unused private members
dotnet_diagnostic.IDE0051.severity = silent

# not default, we have a lot of multiplatform code in compiler directives that defines methods, but keeps the bodies empty
# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = silent

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = warning
dotnet_diagnostic.IDE0073.severity = warning

# Naming rules

dotnet_style_namespace_match_folder = true:suggestion

dotnet_naming_rule.types_and_namespaces_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.types_and_namespaces_should_be_pascalcase.symbols = types_and_namespaces
dotnet_naming_rule.types_and_namespaces_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.interfaces_should_be_ipascalcase.severity = suggestion
dotnet_naming_rule.interfaces_should_be_ipascalcase.symbols = interfaces
dotnet_naming_rule.interfaces_should_be_ipascalcase.style = ipascalcase

dotnet_naming_rule.type_parameters_should_be_tpascalcase.severity = suggestion
dotnet_naming_rule.type_parameters_should_be_tpascalcase.symbols = type_parameters
dotnet_naming_rule.type_parameters_should_be_tpascalcase.style = tpascalcase

dotnet_naming_rule.methods_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.methods_should_be_pascalcase.symbols = methods
dotnet_naming_rule.methods_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.properties_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.properties_should_be_pascalcase.symbols = properties
dotnet_naming_rule.properties_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.events_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.events_should_be_pascalcase.symbols = events
dotnet_naming_rule.events_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.local_variables_should_be_camelcase.severity = suggestion
dotnet_naming_rule.local_variables_should_be_camelcase.symbols = local_variables
dotnet_naming_rule.local_variables_should_be_camelcase.style = camelcase

dotnet_naming_rule.local_constants_should_be_camelcase.severity = suggestion
dotnet_naming_rule.local_constants_should_be_camelcase.symbols = local_constants
dotnet_naming_rule.local_constants_should_be_camelcase.style = camelcase

dotnet_naming_rule.parameters_should_be_camelcase.severity = suggestion
dotnet_naming_rule.parameters_should_be_camelcase.symbols = parameters
dotnet_naming_rule.parameters_should_be_camelcase.style = camelcase

dotnet_naming_rule.public_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.public_fields_should_be_pascalcase.symbols = public_fields
dotnet_naming_rule.public_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.private_fields_should_be__camelcase.severity = suggestion
dotnet_naming_rule.private_fields_should_be__camelcase.symbols = private_fields
dotnet_naming_rule.private_fields_should_be__camelcase.style = _camelcase

dotnet_naming_rule.private_static_fields_should_be_s_camelcase.severity = suggestion
dotnet_naming_rule.private_static_fields_should_be_s_camelcase.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_should_be_s_camelcase.style = s_camelcase

dotnet_naming_rule.public_constant_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.public_constant_fields_should_be_pascalcase.symbols = public_constant_fields
dotnet_naming_rule.public_constant_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.private_constant_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.private_constant_fields_should_be_pascalcase.symbols = private_constant_fields
dotnet_naming_rule.private_constant_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.symbols = public_static_readonly_fields
dotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.symbols = private_static_readonly_fields
dotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.enums_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.enums_should_be_pascalcase.symbols = enums
dotnet_naming_rule.enums_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.local_functions_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascalcase.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.non_field_members_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascalcase.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascalcase.style = pascalcase

# Symbol specifications

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interfaces.required_modifiers =

dotnet_naming_symbols.enums.applicable_kinds = enum
dotnet_naming_symbols.enums.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enums.required_modifiers =

dotnet_naming_symbols.events.applicable_kinds = event
dotnet_naming_symbols.events.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.events.required_modifiers =

dotnet_naming_symbols.methods.applicable_kinds = method
dotnet_naming_symbols.methods.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.methods.required_modifiers =

dotnet_naming_symbols.properties.applicable_kinds = property
dotnet_naming_symbols.properties.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.properties.required_modifiers =

dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_fields.required_modifiers =

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_fields.required_modifiers =

dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_symbols.types_and_namespaces.applicable_kinds = namespace, class, struct, interface, enum
dotnet_naming_symbols.types_and_namespaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types_and_namespaces.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.type_parameters.applicable_kinds = namespace
dotnet_naming_symbols.type_parameters.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters.required_modifiers =

dotnet_naming_symbols.private_constant_fields.applicable_kinds = field
dotnet_naming_symbols.private_constant_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_constant_fields.required_modifiers = const

dotnet_naming_symbols.local_variables.applicable_kinds = local
dotnet_naming_symbols.local_variables.applicable_accessibilities = local
dotnet_naming_symbols.local_variables.required_modifiers =

dotnet_naming_symbols.local_constants.applicable_kinds = local
dotnet_naming_symbols.local_constants.applicable_accessibilities = local
dotnet_naming_symbols.local_constants.required_modifiers = const

dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_symbols.parameters.applicable_accessibilities = *
dotnet_naming_symbols.parameters.required_modifiers =

dotnet_naming_symbols.public_constant_fields.applicable_kinds = field
dotnet_naming_symbols.public_constant_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_constant_fields.required_modifiers = const

dotnet_naming_symbols.public_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.public_static_readonly_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_symbols.local_functions.applicable_accessibilities = *
dotnet_naming_symbols.local_functions.required_modifiers =

# Naming styles

dotnet_naming_style.pascalcase.required_prefix =
dotnet_naming_style.pascalcase.required_suffix =
dotnet_naming_style.pascalcase.word_separator =
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style.ipascalcase.required_prefix = I
dotnet_naming_style.ipascalcase.required_suffix =
dotnet_naming_style.ipascalcase.word_separator =
dotnet_naming_style.ipascalcase.capitalization = pascal_case

dotnet_naming_style.tpascalcase.required_prefix = T
dotnet_naming_style.tpascalcase.required_suffix =
dotnet_naming_style.tpascalcase.word_separator =
dotnet_naming_style.tpascalcase.capitalization = pascal_case

dotnet_naming_style._camelcase.required_prefix = _
dotnet_naming_style._camelcase.required_suffix =
dotnet_naming_style._camelcase.word_separator =
dotnet_naming_style._camelcase.capitalization = camel_case

dotnet_naming_style.camelcase.required_prefix =
dotnet_naming_style.camelcase.required_suffix =
dotnet_naming_style.camelcase.word_separator =
dotnet_naming_style.camelcase.capitalization = camel_case

dotnet_naming_style.s_camelcase.required_prefix = s_
dotnet_naming_style.s_camelcase.required_suffix =
dotnet_naming_style.s_camelcase.word_separator =
dotnet_naming_style.s_camelcase.capitalization = camel_case

#### C# Naming styles ####

csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion

# Naming rules

csharp_style_namespace_declarations = file_scoped:warning # not default, default is block_scoped:silent, changed to follow modern preferences
